# Copyright (c) Pixie Labs, Inc.
# Licensed under the Apache License, Version 2.0 (the "License")

import px

#
# Get the Virtual memory usage and average memory for all processes in the k8s cluster.
#
t1 = px.DataFrame(table='process_stats', start_time='-30s')

bytes_per_mb = 1024.0 * 1024.0
t1.vsize_mb = t1.vsize_bytes / bytes_per_mb
t1.rss_bytes_mb = t1.rss_bytes / bytes_per_mb
t1.timestamp = px.bin(t1.time_, px.seconds(10))
t1.cmdline = px.upid_to_cmdline(t1.upid)

aggop = t1.groupby(['upid', 'timestamp', 'cmdline']).agg(
    vsize_mb=('vsize_mb', px.mean),
    rss_bytes_mb=('rss_bytes_mb', px.mean),
)

# Format column names.
aggop.pid = px.upid_to_pid(aggop.upid)
aggop.asid = px.upid_to_asid(aggop.upid)
aggop['Process Name'] = aggop.cmdline

# Uncomment and replace number to filter on a specific pid.
# aggop = aggop[aggop.pid == 4862]

aggop['Virtual Memory (mb)'] = aggop.vsize_mb
aggop['Average Memory (mb)'] = aggop.rss_bytes_mb
keep_columns = aggop[[
    'pid',
    'Process Name',
    'asid',
    'timestamp',
    'Virtual Memory (mb)',
    'Average Memory (mb)'
]]

px.display(keep_columns)
